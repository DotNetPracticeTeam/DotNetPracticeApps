//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Adventure.Data
{
    public partial class Product
    {
        #region Primitive Properties
    
        public virtual int ProductID
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string ProductNumber
        {
            get;
            set;
        }
    
        public virtual bool MakeFlag
        {
            get;
            set;
        }
    
        public virtual bool FinishedGoodsFlag
        {
            get;
            set;
        }
    
        public virtual string Color
        {
            get;
            set;
        }
    
        public virtual short SafetyStockLevel
        {
            get;
            set;
        }
    
        public virtual short ReorderPoint
        {
            get;
            set;
        }
    
        public virtual decimal StandardCost
        {
            get;
            set;
        }
    
        public virtual decimal ListPrice
        {
            get;
            set;
        }
    
        public virtual string Size
        {
            get;
            set;
        }
    
        public virtual string SizeUnitMeasureCode
        {
            get;
            set;
        }
    
        public virtual string WeightUnitMeasureCode
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Weight
        {
            get;
            set;
        }
    
        public virtual int DaysToManufacture
        {
            get;
            set;
        }
    
        public virtual string ProductLine
        {
            get;
            set;
        }
    
        public virtual string Class
        {
            get;
            set;
        }
    
        public virtual string Style
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ProductSubcategoryID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ProductModelID
        {
            get;
            set;
        }
    
        public virtual System.DateTime SellStartDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> SellEndDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> DiscontinuedDate
        {
            get;
            set;
        }
    
        public virtual System.Guid rowguid
        {
            get;
            set;
        }
    
        public virtual System.DateTime ModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<PurchaseOrderDetail> PurchaseOrderDetails
        {
            get
            {
                if (_purchaseOrderDetails == null)
                {
                    var newCollection = new FixupCollection<PurchaseOrderDetail>();
                    newCollection.CollectionChanged += FixupPurchaseOrderDetails;
                    _purchaseOrderDetails = newCollection;
                }
                return _purchaseOrderDetails;
            }
            set
            {
                if (!ReferenceEquals(_purchaseOrderDetails, value))
                {
                    var previousValue = _purchaseOrderDetails as FixupCollection<PurchaseOrderDetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPurchaseOrderDetails;
                    }
                    _purchaseOrderDetails = value;
                    var newValue = value as FixupCollection<PurchaseOrderDetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPurchaseOrderDetails;
                    }
                }
            }
        }
        private ICollection<PurchaseOrderDetail> _purchaseOrderDetails;

        #endregion
        #region Association Fixup
    
        private void FixupPurchaseOrderDetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PurchaseOrderDetail item in e.NewItems)
                {
                    item.Product = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PurchaseOrderDetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.Product, this))
                    {
                        item.Product = null;
                    }
                }
            }
        }

        #endregion
    }
}
