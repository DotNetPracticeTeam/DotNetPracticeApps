//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Pubs.Data
{
    public partial class titleauthor
    {
        #region Primitive Properties
    
        public virtual string authorid
        {
            get { return _authorid; }
            set
            {
                if (_authorid != value)
                {
                    if (author != null && author.id != value)
                    {
                        author = null;
                    }
                    _authorid = value;
                }
            }
        }
        private string _authorid;
    
        public virtual string titleid
        {
            get { return _titleid; }
            set
            {
                if (_titleid != value)
                {
                    if (title != null && title.id != value)
                    {
                        title = null;
                    }
                    _titleid = value;
                }
            }
        }
        private string _titleid;
    
        public virtual Nullable<byte> authororder
        {
            get;
            set;
        }
    
        public virtual Nullable<int> royaltypercent
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual author author
        {
            get { return _author; }
            set
            {
                if (!ReferenceEquals(_author, value))
                {
                    var previousValue = _author;
                    _author = value;
                    Fixupauthor(previousValue);
                }
            }
        }
        private author _author;
    
        public virtual title title
        {
            get { return _title; }
            set
            {
                if (!ReferenceEquals(_title, value))
                {
                    var previousValue = _title;
                    _title = value;
                    Fixuptitle(previousValue);
                }
            }
        }
        private title _title;

        #endregion
        #region Association Fixup
    
        private void Fixupauthor(author previousValue)
        {
            if (previousValue != null && previousValue.titleauthors.Contains(this))
            {
                previousValue.titleauthors.Remove(this);
            }
    
            if (author != null)
            {
                if (!author.titleauthors.Contains(this))
                {
                    author.titleauthors.Add(this);
                }
                if (authorid != author.id)
                {
                    authorid = author.id;
                }
            }
        }
    
        private void Fixuptitle(title previousValue)
        {
            if (previousValue != null && previousValue.titleauthors.Contains(this))
            {
                previousValue.titleauthors.Remove(this);
            }
    
            if (title != null)
            {
                if (!title.titleauthors.Contains(this))
                {
                    title.titleauthors.Add(this);
                }
                if (titleid != title.id)
                {
                    titleid = title.id;
                }
            }
        }

        #endregion
    }
}
